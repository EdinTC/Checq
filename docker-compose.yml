version: "3.7"

networks:
  web:
    external: true
  internal:
    external: false

services:
  traefik:
    image: traefik:2.2.8
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./.docker/traefik.toml:/traefik.toml"
      - "./.docker/acme.json:/acme.json"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - web

  api:
    image: edintc/checq-api:latest
    restart: always
    volumes:
      - ./api:/go/src/github.com/EdinTC/Checq/api
    networks:
      - internal
      - web
    labels:
      - "traefik.http.routers.checq-api.rule=Host(`api.checq.intercube.io`)"
      - "traefik.http.routers.checq-api.tls=true"
      - "traefik.http.routers.checq-api.tls.certresolver=le"
      - "traefik.http.routers.checq-api.middlewares=https-only@file"
      - "traefik.http.services.checq-api.loadbalancer.server.port=1337"

  frontend:
    image: edintc/checq-frontend:latest
    restart: always
    volumes:
      - ./frontend/public:/frontend/public
    networks:
      - internal
      - web
    labels:
      - "traefik.http.routers.checq-api.rule=Host(`checq.intercube.io`)"
      - "traefik.http.routers.checq-api.tls=true"
      - "traefik.http.routers.checq-api.tls.certresolver=le"
      - "traefik.http.routers.checq-api.middlewares=https-only@file"
      - "traefik.http.services.checq-api.loadbalancer.server.port=80"
